<?xml-stylesheet type="text/css" href="../../resources/style/test.css" ?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="body" width="450" height="500" viewBox="0 0 450 500"><title>removeChild test &apos;onload&apos;</title><text x="50%" y="45" class="title">removeChild test &apos;onload&apos;</text><script type="text/ecmascript">var svgNamespaceURI = &quot;http://www.w3.org/2000/svg&quot;; var TEXT_NODE = 3; function remove(evt) { var g = evt.currentTarget; // First remove any text node children. var fc = g.firstChild; while (fc) { if (fc.getNodeType() == TEXT_NODE) { var x = fc; fc = fc.nextSibling; g.removeChild(x); } else { fc = fc.nextSibling; } } g.removeChild(g.firstChild); // remove grey g.removeChild(g.firstChild.nextSibling); // remove crimson g.removeChild(g.firstChild.nextSibling); // remove orange g.removeChild(g.firstChild); // remove gold } function removeAll(evt) { var g = evt.currentTarget; while (g.hasChildNodes()) { g.removeChild(g.firstChild); } }</script><g onload="remove(evt)"><rect width="100" height="100" x="100" y="100" style="fill:#eee"/><rect width="100" height="100" x="150" y="100" style="fill:gold"/><rect width="100" height="100" x="200" y="100" style="fill:#dc143c"/><rect width="100" height="100" x="250" y="100" style="fill:orange"/></g><g onload="removeAll(evt)"><rect width="100" height="100" x="100" y="300" style="fill:#eee"/><rect width="100" height="100" x="150" y="300" style="fill:gold"/><rect width="100" height="100" x="200" y="300" style="fill:#dc143c"/><rect width="100" height="100" x="250" y="300" style="fill:orange"/></g></svg>